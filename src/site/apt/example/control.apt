Simple GPIO Control using Pi4J.

  The following example demonstrates the simple control of a GPIO pin on the Raspberry Pi.

* Source Code
  
  The source code for this example is included in the github repository:\
  {{https://github.com/Pi4J/pi4j/tree/master/pi4j-example/src/main/java/com/pi4j/example/ControlGpioExample.java}}

%{snippet|id=control-gpio-snippet|file=pi4j-example/src/main/java/com/pi4j/example/ControlGpioExample.java}

* Wiring Diagram

  The following circuit can be used in conjunction with this sample code.
  
[../images/gpio-control-example.png]

  {{{../images/gpio-control-example-large.png}(click here for hi-resolution image)}}

* Download
  
  First, copy the <ControlGpioExample.java> source file to a directory on the RaspberryPi.\
  You can use the following command on the Pi's console or SSH terminal to download the example source file directly to your Pi:
  
  <<<wget https://raw.github.com/Pi4J/pi4j/master/pi4j-example/src/main/java/com/pi4j/example/ControlGpioExample.java>>>

* Compile
  
  Next, use the following command to compile this example program:
  
  <<<javac -cp pi4j.jar -d . ControlGpioExample.java>>>
  
* Execute
  
  The following command will run this example program:
  
  <<<sudo java -classpath .:pi4j.jar com.pi4j.example.ControlGpioExample>>>
  
* Output

  You should see the attached LED perform as follows:
  
[../images/pinon.png] 
  
  Turn ON for 5 seconds

[../images/pinoff.png] 
  
  Turn OFF for 5 seconds

[../images/pinon.png] 
  
  Turn ON for 5 seconds

[../images/pinoff.png] 
  
  Turn OFF for 5 seconds

[../images/pinon.png] 
  
  Turn ON for 1 second

[../images/pinoff.png] 
  
  Turn OFF
