GPIO State Listener Example using Pi4J.

  The following example demonstrates how to setup a listener for GPIO pin state changes on the Raspberry Pi.  
  This listener implementation is far more efficient than constantly polling and querying for the the GPIO pin state.  
  The listener implementation is based on GPIO hardware interrupts not state polling.

* Source Code 
   
  The source code for this example is included in the github repository: {{https://github.com/Pi4J/pi4j/tree/master/src/test/java/com/pi4j/example}}

%{snippet|id=listen-gpio-snippet|file=src/test/java/com/pi4j/example/ListenGpioExample.java}

* Wiring Diagram

  The following circuit can be used in conjunction with this sample code.
  
[../images/gpio-listener-example.png]

  {{{../images/gpio-listener-example-large.png}(click here for hi-resolution image)}}

* Download
  
  First, copy the <ListenGpioExample.java> source file to a directory on the RaspberryPi.\
  You can use the following command on the Pi's console or SSH terminal to download the example source file directly to your Pi:
  
  <<<wget https://raw.github.com/Pi4J/pi4j/master/src/test/java/com/pi4j/example/ListenGpioExample.java>>>

* Compile
  
  Next, use the following command to compile this example program:
  
  <<<javac -cp pi4j.jar -d . ListenGpioExample.java>>>
  
* Execute
  
  The following command will run this example program:
  
  <<<sudo java -classpath .:pi4j.jar com.pi4j.example.ListenGpioExample>>>
  
* Output

  You should see the following message on the console each time the momentary button is pressed:
  
  <<< --> GPIO PIN STATE CHANGE: 4 = HIGH >>>
  
  and this message on the console each time the momentary button is released:
  
  <<< --> GPIO PIN STATE CHANGE: 4 = LOW >>>