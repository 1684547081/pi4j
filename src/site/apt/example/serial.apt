Serial Communication Example using Pi4J.

  The following example demonstrates how to transmit and receive data using the Raspberry Pi serial port.
  \
  (A complete article on building and installing a serial port on the Raspberry Pi is available here:\ 
  {{http://www.savagehomeautomation.com/projects/raspberry-pi-installing-a-rs232-serial-port.html}})

* Source Code 
   
  The source code for this example is included in the github repository: {{https://github.com/Pi4J/pi4j/tree/master/src/test/java/com/pi4j/example}}

%{snippet|id=serial-snippet|file=src/test/java/com/pi4j/example/SerialExample.java}

* Wiring Diagram

  The circuit below illustrates a RS232 serial port connected to the Raspberry Pi's GPIO header.\
  The following circuit can be used in conjunction with this sample code.\
  \
  (A complete article on building and installing a serial port on the Raspberry Pi is available here:\ 
  {{http://www.savagehomeautomation.com/projects/raspberry-pi-installing-a-rs232-serial-port.html}})
  
[../images/serial-example.png]

* Compile
  
  First, copy the <SerialExample.java> source file to a directory on the RaspberryPi.\
  Next, use the following command to compile this example program:
  
  <<<javac -cp /usr/share/java/pi4j.jar -d SerialExample.java>>>
  
* Execute
  
  The following command will run this example program:
  
  <<<sudo java -Djava.library.path=/usr/local/lib -classpath .:/usr/share/java/pi4j.jar com.pi4j.example.SerialExample>>>
  
* Output

  To test this program you will need to connect your computer via serial cable and use a serial communications tool such as Hyperterminal or Indigo Terminal Emulator.  
  Establish a connection using baud rate 34800 with parity set to NONE, data bits to 8 and stop bits to 1. (38400,N,8,1)  
  Once connected you should see the following data displayed in the terminal software:
  
  <<<
  CURRENT TIME: <Date/Time>\
  Second Line\
  Third Line\
  >>>  

  This data should be repeated every second.
  
  You can also submit data from the terminal software and that data should be displayed on the Raspberry Pi's console. 